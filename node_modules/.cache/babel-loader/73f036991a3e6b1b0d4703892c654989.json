{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = validateInfo => {\n  _s();\n\n  const [values, setValues] = useState({\n    idea: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validateInfo(values));\n    setIsSubmitting(true);\n  };\n\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"YyCJtw6HRhDIx72pIGmSNHl5acA=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anirbit/Workspace/yellow-box/src/components/Form/useForm.js"],"names":["useState","useEffect","useForm","validateInfo","values","setValues","idea","email","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,YAAD,IAAkB;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMY,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAX,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACU,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACN,YAAY,CAACC,MAAD,CAAb,CAAT;AACAO,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GALD;;AAQA,SAAO;AAACC,IAAAA,YAAD;AAAeR,IAAAA,MAAf;AAAuBa,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CA1BD;;GAAMN,O;;AA4BN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validateInfo) => {\n    const [values, setValues] = useState({\n        idea: '',\n        email: ''\n    });\n\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setValues({\n            ...values, \n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validateInfo(values));\n        setIsSubmitting(true);\n    };\n\n\n    return {handleChange, values, handleSubmit, errors};\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}