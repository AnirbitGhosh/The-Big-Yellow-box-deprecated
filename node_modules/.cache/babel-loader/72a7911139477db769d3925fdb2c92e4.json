{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = validate => {\n  _s();\n\n  const [values, setValues] = useState({\n    idea: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n\n    if (errors) {\n      alert(\"form has errrors\");\n    } else {\n      alert(\"success\");\n    }\n  };\n\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"y/+KVw1fHu752tpLosXi0NclmN8=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anirbit/Workspace/yellow-box/src/components/Form/useForm.js"],"names":["useState","useEffect","useForm","validate","values","setValues","idea","email","errors","setErrors","handleChange","e","name","value","target","handleSubmit","preventDefault","alert"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAT,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACQ,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAP,IAAAA,SAAS,CAACN,QAAQ,CAACC,MAAD,CAAT,CAAT;;AAEA,QAAGI,MAAH,EAAU;AACNS,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,KAFD,MAEM;AACFA,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AACJ,GAVD;;AAaA,SAAO;AAACP,IAAAA,YAAD;AAAeN,IAAAA,MAAf;AAAuBW,IAAAA,YAAvB;AAAqCP,IAAAA;AAArC,GAAP;AACH,CA9BD;;GAAMN,O;;AAgCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validate) => {\n    const [values, setValues] = useState({\n        idea: '',\n        email: ''\n    });\n\n    const [errors, setErrors] = useState({});\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setValues({\n            ...values, \n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validate(values));\n\n        if(errors){\n            alert(\"form has errrors\");\n        }else { \n            alert(\"success\");\n        }\n    };\n\n\n    return {handleChange, values, handleSubmit, errors};\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}